
// =============================================================================================
// This file was automatically generated by the Dapper.FastCRUD T4 Template
// Do not make changes directly to this file - edit the template configuration instead
// 
// The following settings were used to generate this file:
// 
//     Provider:                                          System.Data.SqlClient
//     Views included:                                    True
//     Relationships included:                            True
//     Default database column value generation analysis: True
// =============================================================================================
namespace Dapper.FastCrud.Tests.Models.Unused
{
    using System;
    using System.ComponentModel.DataAnnotations;
    using System.ComponentModel.DataAnnotations.Schema;
    using System.Collections.Generic;
    /// <summary>
    /// Represents the 'Badges' table.
    /// </summary>
    [Table("Badges")]
    public partial class BadgeEntity
    {
        /// <summary>
        /// Represents the column 'Id'.
        /// </summary>
        [Key]
        [Column(Order = 1)]
        [ForeignKey(nameof(Employee))]
        public virtual int Id { get; set; }

        /// <summary>
        /// Represents the column 'EmployeeId'.
        /// </summary>
        [Key]
        [Column(Order = 2)]
        [ForeignKey(nameof(Employee))]
        public virtual Guid EmployeeId { get; set; }

        /// <summary>
        /// The barcode of the badge used by the employee <br/>
        /// Represents the column 'Barcode'.
        /// </summary>
        public virtual string Barcode { get; set; }

        /// <summary>
        /// Represents the navigation property for the child-parent relationship involving <seealso cref="EmployeeEntity"/>
        /// </summary>
        public virtual EmployeeEntity Employee { get; set; }
    }

    /// <summary>
    /// Represents the 'CrazyTable' table.
    /// </summary>
    [Table("CrazyTable")]
    public partial class CrazyTableEntity
    {
        /// <summary>
        /// Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since <br/>
        /// the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, <br/>
        /// but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset <br/>
        /// sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum <br/>
        /// Represents the column 'Id'.
        /// </summary>
        [Key]
        public virtual int Id { get; set; }

        /// <summary>
        /// Test starting with a digit <br/>
        /// Represents the column '123mb'.
        /// </summary>
        [Column("123mb")]
        public virtual int Prop123Mb { get; set; }

        /// <summary>
        /// Test starting with a C# keyword <br/>
        /// Represents the column 'switch'.
        /// </summary>
        [Column("switch")]
        public virtual int PropSwitch { get; set; }
    }

    /// <summary>
    /// Represents the 'Employee' table.
    /// </summary>
    [Table("Employee")]
    public partial class EmployeeEntity
    {
        /// <summary>
        /// Represents the column 'Id'.
        /// </summary>
        [Key]
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column("Id", Order = 1)]
        public virtual int EmployeeUserId { get; set; }

        /// <summary>
        /// Represents the column 'EmployeeId'.
        /// </summary>
        [Key]
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(Order = 2)]
        public virtual Guid EmployeeId { get; set; }

        /// <summary>
        /// Represents the column 'KeyPass'.
        /// </summary>
        [Dapper.FastCrud.DatabaseGeneratedDefaultValue]
        public virtual Guid KeyPass { get; set; }

        /// <summary>
        /// Represents the column 'LastName'.
        /// </summary>
        public virtual string LastName { get; set; }

        /// <summary>
        /// Represents the column 'FirstName'.
        /// </summary>
        public virtual string? FirstName { get; set; }

        /// <summary>
        /// Represents the column 'BirthDate'.
        /// </summary>
        public virtual DateTime BirthDate { get; set; }

        /// <summary>
        /// Represents the column 'RecordIndex'.
        /// </summary>
        public virtual int RecordIndex { get; set; }

        /// <summary>
        /// Represents the column 'WorkstationId'.
        /// </summary>
        [ForeignKey(nameof(Workstation))]
        public virtual long? WorkstationId { get; set; }

        /// <summary>
        /// Represents the column 'SupervisorUserId'.
        /// </summary>
        [Column(Order = 1)]
        [ForeignKey(nameof(Employee))]
        public virtual int? SupervisorUserId { get; set; }

        /// <summary>
        /// Represents the column 'SupervisorEmployeeId'.
        /// </summary>
        [Column(Order = 2)]
        [ForeignKey(nameof(Employee))]
        public virtual Guid? SupervisorEmployeeId { get; set; }

        /// <summary>
        /// Represents the column 'ManagerUserId'.
        /// </summary>
        [Column(Order = 1)]
        [ForeignKey(nameof(Employee1))]
        public virtual int? ManagerUserId { get; set; }

        /// <summary>
        /// Represents the column 'ManagerEmployeeId'.
        /// </summary>
        [Column(Order = 2)]
        [ForeignKey(nameof(Employee1))]
        public virtual Guid? ManagerEmployeeId { get; set; }

        /// <summary>
        /// Represents the column 'FullName'.
        /// </summary>
        [DatabaseGenerated(DatabaseGeneratedOption.Computed)]
        public virtual string? FullName { get; set; }

        /// <summary>
        /// Represents the navigation property for the child-parent relationship involving <seealso cref="WorkstationEntity"/>
        /// </summary>
        public virtual WorkstationEntity Workstation { get; set; }

        /// <summary>
        /// Represents the navigation property for the child-parent relationship involving <seealso cref="EmployeeEntity"/>
        /// </summary>
        public virtual EmployeeEntity Employee { get; set; }

        /// <summary>
        /// Represents the navigation property for the child-parent relationship involving <seealso cref="EmployeeEntity"/>
        /// </summary>
        public virtual EmployeeEntity Employee1 { get; set; }

        /// <summary>
        /// Represents the navigation property for the parent-children relationship involving <seealso cref="BadgeEntity"/>
        /// </summary>
        [InverseProperty(nameof(BadgeEntity.Employee))]
        public virtual BadgeEntity? Badge { get; set; }

        /// <summary>
        /// Represents the navigation property for the parent-children relationship involving <seealso cref="EmployeeEntity"/>
        /// </summary>
        [InverseProperty(nameof(EmployeeEntity.Employee))]
        public virtual IEnumerable<EmployeeEntity>? Employees { get; set; }

        /// <summary>
        /// Represents the navigation property for the parent-children relationship involving <seealso cref="EmployeeEntity"/>
        /// </summary>
        [InverseProperty(nameof(EmployeeEntity.Employee1))]
        public virtual IEnumerable<EmployeeEntity>? Employees1 { get; set; }
    }

    /// <summary>
    /// Represents the 'EmployeeBadges' view.
    /// </summary>
    [Table("EmployeeBadges")]
    public partial class EmployeeBadgeEntity
    {
        /// <summary>
        /// Represents the column 'EmployeeId'.
        /// </summary>
        public virtual Guid EmployeeId { get; set; }

        /// <summary>
        /// Represents the column 'FirstName'.
        /// </summary>
        public virtual string? FirstName { get; set; }

        /// <summary>
        /// Represents the column 'LastName'.
        /// </summary>
        public virtual string LastName { get; set; }

        /// <summary>
        /// Represents the column 'Barcode'.
        /// </summary>
        public virtual string Barcode { get; set; }
    }

    /// <summary>
    /// Represents the 'tbl_shoe_size' table.
    /// </summary>
    [Table("tbl_shoe_size")]
    public partial class ShoeSizeEntity
    {
        /// <summary>
        /// Represents the column 'PersonId'.
        /// </summary>
        public virtual int PersonId { get; set; }

        /// <summary>
        /// Represents the column 'shoe_size'.
        /// </summary>
        [Column("shoe_size")]
        public virtual byte? ShoeSize { get; set; }
    }

    /// <summary>
    /// Represents the 'Workstations' table.
    /// </summary>
    [Table("Workstations")]
    public partial class WorkstationEntity
    {
        /// <summary>
        /// Represents the column 'WorkstationId'.
        /// </summary>
        [Key]
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        public virtual long WorkstationId { get; set; }

        /// <summary>
        /// Represents the column 'Name'.
        /// </summary>
        public virtual string? Name { get; set; }

        /// <summary>
        /// Represents the column 'InventoryIndex'.
        /// </summary>
        public virtual int InventoryIndex { get; set; }

        /// <summary>
        /// Represents the column 'AccessLevel'.
        /// </summary>
        [Dapper.FastCrud.DatabaseGeneratedDefaultValue]
        public virtual int AccessLevel { get; set; }

        /// <summary>
        /// Represents the column 'BuildingId'.
        /// </summary>
        public virtual int? BuildingId { get; set; }

        /// <summary>
        /// Represents the navigation property for the parent-children relationship involving <seealso cref="EmployeeEntity"/>
        /// </summary>
        [InverseProperty(nameof(EmployeeEntity.Workstation))]
        public virtual IEnumerable<EmployeeEntity>? Employees { get; set; }
    }

}

 
